diff --git a/ds.module b/ds.module
index 4d70ede3..c7c69027 100644
--- a/ds.module
+++ b/ds.module
@@ -506,17 +506,20 @@ function ds_preprocess_ds_layout(&$variables) {
   }
 
   // Create region variables based on the layout settings.
-  foreach ($layout_settings['wrappers'] as $region_name => $wrapper) {
-    // @todo remove from D9, This is deprecated
-    $variables[$region_name . '_classes'] = !empty($layout_settings['classes'][$region_name]) ? ' ' . implode(' ', $layout_settings['classes'][$region_name]) : '';
-    // The new way of doing stuff is creating an attributes object.
-    if (!empty($layout_settings['classes'][$region_name])) {
-      $variables[$region_name . '_attributes'] = new Attribute(['class' => $layout_settings['classes'][$region_name]]);
-    }
-    else {
-      $variables[$region_name . '_attributes'] = new Attribute();
+  if (!empty($layout_settings['wrappers']) && is_array($layout_settings['wrappers'])) {
+
+    foreach ($layout_settings['wrappers'] as $region_name => $wrapper) {
+      // @todo remove from D9, This is deprecated
+      $variables[$region_name . '_classes'] = !empty($layout_settings['classes'][$region_name]) ? ' ' . implode(' ', $layout_settings['classes'][$region_name]) : '';
+      // The new way of doing stuff is creating an attributes object.
+      if (!empty($layout_settings['classes'][$region_name])) {
+        $variables[$region_name . '_attributes'] = new Attribute(['class' => $layout_settings['classes'][$region_name]]);
+      }
+      else {
+        $variables[$region_name . '_attributes'] = new Attribute();
+      }
+      $variables[$region_name . '_wrapper'] = !empty($layout_settings['wrappers'][$region_name]) ? $layout_settings['wrappers'][$region_name] : 'div';
     }
-    $variables[$region_name . '_wrapper'] = !empty($layout_settings['wrappers'][$region_name]) ? $layout_settings['wrappers'][$region_name] : 'div';
   }
 
   // Add a layout wrapper.
diff --git a/includes/field_ui.inc b/includes/field_ui.inc
index dafe2df9..8324fb86 100644
--- a/includes/field_ui.inc
+++ b/includes/field_ui.inc
@@ -396,7 +396,7 @@ function ds_field_ui_layouts_save($form, FormStateInterface $form_state) {
     $record['layout']['settings']['attributes'] = '';
     $record['layout']['settings']['link_attribute'] = FALSE;
     $record['layout']['settings']['link_custom'] = '';
-    $fields = _ds_sort_fields($form_state->getValue('fields'), 'weight');
+    $fields = _ds_sort_fields((array) $form_state->getValue('fields'), 'weight');
     foreach ($fields as $field_key => $field) {
 
       // Ignore new fieldgroup, new field or existing field.
@@ -423,7 +423,7 @@ function ds_field_ui_layouts_save($form, FormStateInterface $form_state) {
   elseif (!empty($layout)) {
     $save_display = TRUE;
 
-    $fields = _ds_sort_fields($form_state->getValue('fields'), 'weight');
+    $fields = _ds_sort_fields((array) $form_state->getValue('fields'), 'weight');
 
     foreach ($fields as $key => $field) {
       // Make sure to hide hidden fields.
@@ -1089,6 +1089,49 @@ function _ds_field_ui_fields($entity_type, $bundle, $view_mode, array &$form, Fo
   $field_settings = $form['#ds_layout']['fields'];
   $form['#field_settings'] = $field_settings;
 
+  if (empty($form['fields'])) {
+    // EntityDisplayFormBase Doesn't add the fields table and field_ui library
+    // when there are no fields.  Since DS needs those, we add them.
+    $form['#attached']['library'][] = 'field_ui/drupal.field_ui';
+    $form['fields'] = [
+      '#type' => 'field_ui_table',
+      '#weight' => -101,
+      '#header' => [
+        t('Field'),
+        t('Weight'),
+        t('Parent'),
+        t('Region'),
+        t('Label'),
+        ['data' => t('Format'), 'colspan' => 3],
+      ],
+      '#regions' => [],
+      '#attributes' => [
+        'class' => ['field-ui-overview'],
+        'id' => 'field-display-overview',
+      ],
+      '#tabledrag' => [
+        [
+          'action' => 'order',
+          'relationship' => 'sibling',
+          'group' => 'field-weight',
+        ],
+        [
+          'action' => 'match',
+          'relationship' => 'parent',
+          'group' => 'field-parent',
+          'subgroup' => 'field-parent',
+          'source' => 'field-name',
+        ],
+        [
+          'action' => 'match',
+          'relationship' => 'parent',
+          'group' => 'field-region',
+          'subgroup' => 'field-region',
+          'source' => 'field-name',
+        ],
+      ],
+    ];
+  }
   $table = &$form['fields'];
   $form['#ds_fields'] = [];
 
@@ -1404,6 +1447,7 @@ function ds_field_row_form_format_summary_construct(&$table, $key, FormStateInte
  */
 function _ds_sort_fields(array $a, $subkey) {
   $c = [];
+  $b = [];
   foreach ($a as $k => $v) {
     if (isset($v[$subkey])) {
       $b[$k] = $v[$subkey];
